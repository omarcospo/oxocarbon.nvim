local color = require("oxocarbon.colors")

if vim.g.colors_name then
  vim.cmd("hi clear")
end

vim.g.colors_name = "oxocarbon"
vim.o.termguicolors = true

-- Background
vim.api.nvim_set_hl(0, "Normal", { fg = color.base04, bg = color.base00 })
vim.api.nvim_set_hl(0, "NormalNC", { fg = color.base05, bg = color.base00 })

-- Notify
vim.api.nvim_set_hl(0, "NotifyBackground", { fg = color.base04, bg = color.none })

-- Neogit
vim.api.nvim_set_hl(0, "NeogitBranch", { fg = color.base10, bg = color.none })
vim.api.nvim_set_hl(0, "NeogitRemote", { fg = color.base09, bg = color.none })
vim.api.nvim_set_hl(0, "NeogitHunkHeader", { fg = color.base04, bg = color.base02 })
vim.api.nvim_set_hl(0, "NeogitHunkHeaderHighlight", { fg = color.base04, bg = color.base03 })

-- Windows
vim.api.nvim_set_hl(0, "NormalFloat", { fg = color.base05, bg = color.none })
vim.api.nvim_set_hl(0, "FloatBorder", { fg = color.base03, bg = color.none })
vim.api.nvim_set_hl(0, "WinSeparator", { fg = color.base03, bg = color.none })

-- StatusLine
vim.api.nvim_set_hl(0, "StatusLine", { fg = color.base03, bg = color.none })
vim.api.nvim_set_hl(0, "StatusLineNC", { fg = color.base03, bg = color.none })

-- Winbar
vim.api.nvim_set_hl(0, "WinBar", { fg = color.base04, bg = dark })
vim.api.nvim_set_hl(0, "WinBarNC", { fg = color.base04, bg = dark })

-- Column and cursor highlights
vim.api.nvim_set_hl(0, "ColorColumn", { fg = color.none, bg = color.base01 })
vim.api.nvim_set_hl(0, "Cursor", { fg = color.base00, bg = color.base04 })
vim.api.nvim_set_hl(0, "CursorLine", { fg = color.none, bg = color.base01 })
vim.api.nvim_set_hl(0, "CursorColumn", { fg = color.none, bg = color.base01 })
vim.api.nvim_set_hl(0, "CursorLineNr", { fg = color.base04, bg = color.none })

-- Quickfix and error highlights
vim.api.nvim_set_hl(0, "QuickFixLine", { fg = color.none, bg = color.base01 })
vim.api.nvim_set_hl(0, "Error", { fg = color.base10, bg = color.base01 })

-- Line number and non-text highlights
vim.api.nvim_set_hl(0, "LineNr", { fg = color.base03, bg = color.base00 })
vim.api.nvim_set_hl(0, "NonText", { fg = color.base02, bg = color.none })

-- Popup menu highlights
vim.api.nvim_set_hl(0, "Pmenu", { fg = color.base04, bg = color.base01 })
vim.api.nvim_set_hl(0, "PmenuSbar", { fg = color.base04, bg = color.base01 })
vim.api.nvim_set_hl(0, "PmenuSel", { fg = color.base08, bg = color.base02 })
vim.api.nvim_set_hl(0, "PmenuThumb", { fg = color.base08, bg = color.base02 })

-- Special key and visual mode highlights
vim.api.nvim_set_hl(0, "SpecialKey", { fg = color.base03, bg = color.none })
vim.api.nvim_set_hl(0, "Visual", { fg = color.none, bg = color.base02 })
vim.api.nvim_set_hl(0, "VisualNOS", { fg = color.none, bg = color.base02 })
vim.api.nvim_set_hl(0, "TooLong", { fg = color.none, bg = color.base02 })

-- Debug and macro highlights
vim.api.nvim_set_hl(0, "Debug", { fg = color.base13, bg = color.none })
vim.api.nvim_set_hl(0, "Macro", { fg = color.base07, bg = color.none })

-- Matching parenthesis highlight
vim.api.nvim_set_hl(0, "MatchParen", { fg = color.none, bg = color.base02, underline = true })

-- Text style highlights
vim.api.nvim_set_hl(0, "Bold", { fg = color.none, bg = color.none, bold = true })
vim.api.nvim_set_hl(0, "Italic", { fg = color.none, bg = color.none, italic = true })
vim.api.nvim_set_hl(0, "Underlined", { fg = color.none, bg = color.none, underline = true })

-- Diagnostic severity highlights
vim.api.nvim_set_hl(0, "DiagnosticWarn", { fg = color.base14, bg = color.none })
vim.api.nvim_set_hl(0, "DiagnosticError", { fg = color.base10, bg = color.none })
vim.api.nvim_set_hl(0, "DiagnosticInfo", { fg = color.base09, bg = color.none })
vim.api.nvim_set_hl(0, "DiagnosticHint", { fg = color.base04, bg = color.none })

-- Diagnostic underline highlights
vim.api.nvim_set_hl(0, "DiagnosticUnderlineWarn", { fg = color.base14, bg = color.none, undercurl = true })
vim.api.nvim_set_hl(0, "DiagnosticUnderlineError", { fg = color.base10, bg = color.none, undercurl = true })
vim.api.nvim_set_hl(0, "DiagnosticUnderlineInfo", { fg = color.base04, bg = color.none, undercurl = true })
vim.api.nvim_set_hl(0, "DiagnosticUnderlineHint", { fg = color.base04, bg = color.none, undercurl = true })

-- Health status highlights
vim.api.nvim_set_hl(0, "HealthError", { fg = color.base10, bg = color.none })
vim.api.nvim_set_hl(0, "HealthWarning", { fg = color.base14, bg = color.none })
vim.api.nvim_set_hl(0, "HealthSuccess", { fg = color.base13, bg = color.none })

-- Text style highlights
vim.api.nvim_set_hl(0, "@comment", { link = "Comment" })
vim.api.nvim_set_hl(0, "@text.literal.commodity", { fg = color.base13, bg = color.none })

-- Number highlights
vim.api.nvim_set_hl(0, "@number", { fg = color.base09, bg = color.none })
vim.api.nvim_set_hl(0, "@number.date", { fg = color.base08, bg = color.none })
vim.api.nvim_set_hl(0, "@number.date.effective", { fg = color.base13, bg = color.none })
vim.api.nvim_set_hl(0, "@number.interval", { fg = color.base09, bg = color.none })
vim.api.nvim_set_hl(0, "@number.status", { fg = color.base12, bg = color.none })
vim.api.nvim_set_hl(0, "@number.quantity", { fg = color.base11, bg = color.none })
vim.api.nvim_set_hl(0, "@number.quantity.negative", { fg = color.base10, bg = color.none })

-- LSP references and signatures
vim.api.nvim_set_hl(0, "LspReferenceText", { fg = color.none, bg = color.base03 })
vim.api.nvim_set_hl(0, "LspReferenceread", { fg = color.none, bg = color.base03 })
vim.api.nvim_set_hl(0, "LspReferenceWrite", { fg = color.none, bg = color.base03 })
vim.api.nvim_set_hl(0, "LspSignatureActiveParameter", { fg = color.base08, bg = color.none })

-- LSP type highlights
vim.api.nvim_set_hl(0, "@lsp.type.class", { link = "Structure" })
vim.api.nvim_set_hl(0, "@lsp.type.decorator", { link = "Decorator" })
vim.api.nvim_set_hl(0, "@lsp.type.function", { link = "@function" })
vim.api.nvim_set_hl(0, "@lsp.type.macro", { link = "Macro" })
vim.api.nvim_set_hl(0, "@lsp.type.method", { link = "@function" })
vim.api.nvim_set_hl(0, "@lsp.type.struct", { link = "Structure" })
vim.api.nvim_set_hl(0, "@lsp.type.type", { link = "Type" })
vim.api.nvim_set_hl(0, "@lsp.type.typeParameter", { link = "Typedef" })
vim.api.nvim_set_hl(0, "@lsp.type.selfParameter", { link = "@variable.builtin" })
vim.api.nvim_set_hl(0, "@lsp.type.builtinConstant", { link = "@constant.builtin" })
vim.api.nvim_set_hl(0, "@lsp.type.magicFunction", { link = "@function.builtin" })
vim.api.nvim_set_hl(0, "@lsp.type.boolean", { link = "@boolean" })
vim.api.nvim_set_hl(0, "@lsp.type.builtinType", { link = "@type.builtin" })
vim.api.nvim_set_hl(0, "@lsp.type.comment", { link = "@comment" })
vim.api.nvim_set_hl(0, "@lsp.type.enum", { link = "@type" })
vim.api.nvim_set_hl(0, "@lsp.type.enumMember", { link = "@constant" })
vim.api.nvim_set_hl(0, "@lsp.type.escapeSequence", { link = "@string.escape" })
vim.api.nvim_set_hl(0, "@lsp.type.formatSpecifier", { link = "@punctuation.special" })
vim.api.nvim_set_hl(0, "@lsp.type.keyword", { link = "@keyword" })
vim.api.nvim_set_hl(0, "@lsp.type.namespace", { link = "@namespace" })
vim.api.nvim_set_hl(0, "@lsp.type.number", { link = "@number" })
vim.api.nvim_set_hl(0, "@lsp.type.operator", { link = "@operator" })
vim.api.nvim_set_hl(0, "@lsp.type.parameter", { link = "@parameter" })
vim.api.nvim_set_hl(0, "@lsp.type.property", { link = "@property" })
vim.api.nvim_set_hl(0, "@lsp.type.selfKeyword", { link = "@variable.builtin" })
vim.api.nvim_set_hl(0, "@lsp.type.string.rust", { link = "@string" })
vim.api.nvim_set_hl(0, "@lsp.type.typeAlias", { link = "@type.definition" })
vim.api.nvim_set_hl(0, "@lsp.type.unresolvedReference", { link = "Error" })
vim.api.nvim_set_hl(0, "@lsp.type.variable", { link = "@variable" })

-- LSP modifier highlights
vim.api.nvim_set_hl(0, "@lsp.mod.readonly", { link = "@constant" })
vim.api.nvim_set_hl(0, "@lsp.mod.typeHint", { link = "Type" })
vim.api.nvim_set_hl(0, "@lsp.mod.builtin", { link = "Special" })

-- LSP typemod highlights
vim.api.nvim_set_hl(0, "@lsp.typemod.class.defaultLibrary", { link = "@type.builtin" })
vim.api.nvim_set_hl(0, "@lsp.typemod.enum.defaultLibrary", { link = "@type.builtin" })
vim.api.nvim_set_hl(0, "@lsp.typemod.enumMember.defaultLibrary", { link = "@constant.builtin" })
vim.api.nvim_set_hl(0, "@lsp.typemod.function.defaultLibrary", { link = "@function.builtin" })
vim.api.nvim_set_hl(0, "@lsp.typemod.keyword.async", { link = "@keyword.coroutine" })
vim.api.nvim_set_hl(0, "@lsp.typemod.macro.defaultLibrary", { link = "@function.builtin" })
vim.api.nvim_set_hl(0, "@lsp.typemod.method.defaultLibrary", { link = "@function.builtin" })
vim.api.nvim_set_hl(0, "@lsp.typemod.operator.injected", { link = "@operator" })
vim.api.nvim_set_hl(0, "@lsp.typemod.string.injected", { link = "@string" })
vim.api.nvim_set_hl(0, "@lsp.typemod.operator.controlFlow", { link = "@exception" })
vim.api.nvim_set_hl(0, "@lsp.typemod.keyword.documentation", { link = "Special" })
vim.api.nvim_set_hl(0, "@lsp.typemod.variable.global", { link = "@constant" })
vim.api.nvim_set_hl(0, "@lsp.typemod.variable.static", { link = "@constant" })
vim.api.nvim_set_hl(0, "@lsp.typemod.variable.defaultLibrary", { link = "Special" })
vim.api.nvim_set_hl(0, "@lsp.typemod.function.builtin", { link = "@function.builtin" })
vim.api.nvim_set_hl(0, "@lsp.typemod.function.readonly", { link = "@method" })
vim.api.nvim_set_hl(0, "@lsp.typemod.variable.defaultLibrary", { link = "@variable.builtin" })
vim.api.nvim_set_hl(0, "@lsp.typemod.variable.injected", { link = "@variable" })

vim.api.nvim_set_hl(0, "Folded", { fg = color.base02, bg = color.base01 })
vim.api.nvim_set_hl(0, "FoldColumn", { fg = color.base01, bg = color.base00 })
vim.api.nvim_set_hl(0, "SignColumn", { fg = color.base01, bg = color.base00 })
vim.api.nvim_set_hl(0, "Directory", { fg = color.base08, bg = color.none })
vim.api.nvim_set_hl(0, "EndOfBuffer", { fg = color.base01, bg = color.none })
vim.api.nvim_set_hl(0, "ErrorMsg", { fg = color.base10, bg = color.none })
vim.api.nvim_set_hl(0, "ModeMsg", { fg = color.base04, bg = color.none })
vim.api.nvim_set_hl(0, "MoreMsg", { fg = color.base08, bg = color.none })
vim.api.nvim_set_hl(0, "Question", { fg = color.base04, bg = color.none })
vim.api.nvim_set_hl(0, "Substitute", { fg = color.base01, bg = color.base08 })
vim.api.nvim_set_hl(0, "WarningMsg", { fg = color.base14, bg = color.none })
vim.api.nvim_set_hl(0, "WildMenu", { fg = color.base08, bg = color.base01 })
vim.api.nvim_set_hl(0, "helpHyperTextJump", { fg = color.base08, bg = color.none })
vim.api.nvim_set_hl(0, "helpSpecial", { fg = color.base09, bg = color.none })
vim.api.nvim_set_hl(0, "helpHeadline", { fg = color.base10, bg = color.none })
vim.api.nvim_set_hl(0, "helpHeader", { fg = color.base15, bg = color.none })
vim.api.nvim_set_hl(0, "DiffAdded", { fg = color.base07, bg = color.none })
vim.api.nvim_set_hl(0, "DiffChanged", { fg = color.base09, bg = color.none })
vim.api.nvim_set_hl(0, "DiffRemoved", { fg = color.base10, bg = color.none })
vim.api.nvim_set_hl(0, "DiffAdd", { bg = "#122f2f", fg = color.none })
vim.api.nvim_set_hl(0, "DiffChange", { bg = "#222a39", fg = color.none })
vim.api.nvim_set_hl(0, "DiffText", { bg = "#2f3f5c", fg = color.none })
vim.api.nvim_set_hl(0, "DiffDelete", { bg = "#361c28", fg = color.none })
vim.api.nvim_set_hl(0, "IncSearch", { fg = color.base06, bg = color.base10 })
vim.api.nvim_set_hl(0, "Search", { fg = color.base01, bg = color.base08 })
vim.api.nvim_set_hl(0, "TabLine", { link = "StatusLineNC" })
vim.api.nvim_set_hl(0, "TabLineFill", { link = "TabLine" })
vim.api.nvim_set_hl(0, "TabLineSel", { link = "StatusLine" })
vim.api.nvim_set_hl(0, "Title", { fg = color.base04, bg = color.none })
vim.api.nvim_set_hl(0, "VertSplit", { fg = color.base01, bg = color.base00 })
vim.api.nvim_set_hl(0, "Boolean", { fg = color.base09, bg = color.none })
vim.api.nvim_set_hl(0, "Character", { fg = color.base14, bg = color.none })
vim.api.nvim_set_hl(0, "Comment", { fg = color.base03, bg = color.none, italic = true })
vim.api.nvim_set_hl(0, "Conceal", { fg = color.none, bg = color.none })
vim.api.nvim_set_hl(0, "Conditional", { fg = color.base09, bg = color.none })
vim.api.nvim_set_hl(0, "Constant", { fg = color.base04, bg = color.none })
vim.api.nvim_set_hl(0, "Decorator", { fg = color.base12, bg = color.none })
vim.api.nvim_set_hl(0, "Define", { fg = color.base09, bg = color.none })
vim.api.nvim_set_hl(0, "Delimeter", { fg = color.base06, bg = color.none })
vim.api.nvim_set_hl(0, "Exception", { fg = color.base09, bg = color.none })
vim.api.nvim_set_hl(0, "Float", { link = "Number" })
vim.api.nvim_set_hl(0, "Function", { fg = color.base08, bg = color.none })
vim.api.nvim_set_hl(0, "Identifier", { fg = color.base04, bg = color.none })
vim.api.nvim_set_hl(0, "Include", { fg = color.base09, bg = color.none })
vim.api.nvim_set_hl(0, "Keyword", { fg = color.base09, bg = color.none })
vim.api.nvim_set_hl(0, "Label", { fg = color.base09, bg = color.none })
vim.api.nvim_set_hl(0, "Number", { fg = color.base15, bg = color.none })
vim.api.nvim_set_hl(0, "Operator", { fg = color.base09, bg = color.none })
vim.api.nvim_set_hl(0, "PreProc", { fg = color.base09, bg = color.none })
vim.api.nvim_set_hl(0, "Repeat", { fg = color.base09, bg = color.none })
vim.api.nvim_set_hl(0, "Special", { fg = color.base04, bg = color.none })
vim.api.nvim_set_hl(0, "SpecialChar", { fg = color.base04, bg = color.none })
vim.api.nvim_set_hl(0, "SpecialComment", { fg = color.base08, bg = color.none })
vim.api.nvim_set_hl(0, "Statement", { fg = color.base09, bg = color.none })
vim.api.nvim_set_hl(0, "StorageClass", { fg = color.base09, bg = color.none })
vim.api.nvim_set_hl(0, "String", { fg = color.base14, bg = color.none })
vim.api.nvim_set_hl(0, "Structure", { fg = color.base09, bg = color.none })
vim.api.nvim_set_hl(0, "Tag", { fg = color.base04, bg = color.none })
vim.api.nvim_set_hl(0, "Todo", { fg = color.base13, bg = color.none })
vim.api.nvim_set_hl(0, "Type", { fg = color.base09, bg = color.none })
vim.api.nvim_set_hl(0, "Typedef", { fg = color.base09, bg = color.none })
vim.api.nvim_set_hl(0, "markdownBlockquote", { fg = color.base08, bg = color.none })
vim.api.nvim_set_hl(0, "markdownBold", { link = "Bold" })
vim.api.nvim_set_hl(0, "markdownItalic", { link = "Italic" })
vim.api.nvim_set_hl(0, "markdownBoldItalic", { fg = color.none, bg = color.none, bold = true, italic = true })
vim.api.nvim_set_hl(0, "markdownRule", { link = "Comment" })
vim.api.nvim_set_hl(0, "markdownH1", { fg = color.base10, bg = color.none })
vim.api.nvim_set_hl(0, "markdownH2", { link = "markdownH1" })
vim.api.nvim_set_hl(0, "markdownH3", { link = "markdownH1" })
vim.api.nvim_set_hl(0, "markdownH4", { link = "markdownH1" })
vim.api.nvim_set_hl(0, "markdownH5", { link = "markdownH1" })
vim.api.nvim_set_hl(0, "markdownH6", { link = "markdownH1" })
vim.api.nvim_set_hl(0, "markdownHeadingDelimiter", { link = "markdownH1" })
vim.api.nvim_set_hl(0, "markdownHeadingRule", { link = "markdownH1" })
vim.api.nvim_set_hl(0, "markdownUrl", { fg = color.base14, bg = color.none, underline = true })
vim.api.nvim_set_hl(0, "markdownCode", { link = "String" })
vim.api.nvim_set_hl(0, "markdownCodeBlock", { link = "markdownCode" })
vim.api.nvim_set_hl(0, "markdownCodeDelimiter", { link = "markdownCode" })
vim.api.nvim_set_hl(0, "markdownUrl", { link = "String" })
vim.api.nvim_set_hl(0, "markdownListMarker", { fg = color.base08, bg = color.none })
vim.api.nvim_set_hl(0, "markdownOrderedListMarker", { fg = color.base08, bg = color.none })
vim.api.nvim_set_hl(0, "asciidocAttributeEntry", { fg = color.base15, bg = color.none })
vim.api.nvim_set_hl(0, "asciidocAttributeList", { link = "asciidocAttributeEntry" })
vim.api.nvim_set_hl(0, "asciidocAttributeRef", { link = "asciidocAttributeEntry" })
vim.api.nvim_set_hl(0, "asciidocHLabel", { link = "markdownH1" })
vim.api.nvim_set_hl(0, "asciidocOneLineTitle", { link = "markdownH1" })
vim.api.nvim_set_hl(0, "asciidocQuotedMonospaced", { link = "markdownBlockquote" })
vim.api.nvim_set_hl(0, "asciidocURL", { link = "markdownUrl" })
vim.api.nvim_set_hl(0, "@comment", { link = "Comment" })
vim.api.nvim_set_hl(0, "@error", { fg = color.base11, bg = color.none })
vim.api.nvim_set_hl(0, "@operator", { link = "Operator" })
vim.api.nvim_set_hl(0, "@punctuation.delimiter", { fg = color.base08, bg = color.none })
vim.api.nvim_set_hl(0, "@punctuation.bracket", { fg = color.base08, bg = color.none })
vim.api.nvim_set_hl(0, "@punctuation.special", { fg = color.base08, bg = color.none })
vim.api.nvim_set_hl(0, "@string", { link = "String" })
vim.api.nvim_set_hl(0, "@string.regex", { fg = color.base07, bg = color.none })
vim.api.nvim_set_hl(0, "@string.escape", { fg = color.base15, bg = color.none })
vim.api.nvim_set_hl(0, "@character", { link = "Character" })
vim.api.nvim_set_hl(0, "@boolean", { link = "Boolean" })
vim.api.nvim_set_hl(0, "@number", { link = "Number" })
vim.api.nvim_set_hl(0, "@float", { link = "Float" })
vim.api.nvim_set_hl(0, "@function", { fg = color.base12, bg = color.none, bold = true })
vim.api.nvim_set_hl(0, "@function.builtin", { fg = color.base12, bg = color.none })
vim.api.nvim_set_hl(0, "@function.macro", { fg = color.base07, bg = color.none })
vim.api.nvim_set_hl(0, "@method", { fg = color.base07, bg = color.none })
vim.api.nvim_set_hl(0, "@constructor", { fg = color.base09, bg = color.none })
vim.api.nvim_set_hl(0, "@parameter", { fg = color.base04, bg = color.none })
vim.api.nvim_set_hl(0, "@keyword", { fg = color.base09, bg = color.none })
vim.api.nvim_set_hl(0, "@keyword.function", { fg = color.base08, bg = color.none })
vim.api.nvim_set_hl(0, "@keyword.operator", { fg = color.base08, bg = color.none })
vim.api.nvim_set_hl(0, "@conditional", { fg = color.base09, bg = color.none })
vim.api.nvim_set_hl(0, "@repeat", { fg = color.base09, bg = color.none })
vim.api.nvim_set_hl(0, "@label", { fg = color.base15, bg = color.none })
vim.api.nvim_set_hl(0, "@include", { fg = color.base09, bg = color.none })
vim.api.nvim_set_hl(0, "@exception", { fg = color.base15, bg = color.none })
vim.api.nvim_set_hl(0, "@type", { link = "Type" })
vim.api.nvim_set_hl(0, "@type.builtin", { link = "Type" })
vim.api.nvim_set_hl(0, "@attribute", { fg = color.base15, bg = color.none })
vim.api.nvim_set_hl(0, "@field", { fg = color.base04, bg = color.none })
vim.api.nvim_set_hl(0, "@property", { fg = color.base10, bg = color.none })
vim.api.nvim_set_hl(0, "@variable", { fg = color.base04, bg = color.none })
vim.api.nvim_set_hl(0, "@variable.builtin", { fg = color.base04, bg = color.none })
vim.api.nvim_set_hl(0, "@constant", { fg = color.base14, bg = color.none })
vim.api.nvim_set_hl(0, "@constant.builtin", { fg = color.base07, bg = color.none })
vim.api.nvim_set_hl(0, "@constant.macro", { fg = color.base07, bg = color.none })
vim.api.nvim_set_hl(0, "@namespace", { fg = color.base07, bg = color.none })
vim.api.nvim_set_hl(0, "@symbol", { fg = color.base15, bg = color.none, bold = true })
vim.api.nvim_set_hl(0, "@text", { fg = color.base04, bg = color.none })
vim.api.nvim_set_hl(0, "@text.strong", { fg = color.none, bg = color.none })
vim.api.nvim_set_hl(0, "@text.emphasis", { fg = color.base10, bg = color.none, bold = true })
vim.api.nvim_set_hl(0, "@text.underline", { fg = color.base10, bg = color.none, underline = true })
vim.api.nvim_set_hl(0, "@text.strike", { fg = color.base10, bg = color.none, strikethrough = true })
vim.api.nvim_set_hl(0, "@text.title", { fg = color.base10, bg = color.none })
vim.api.nvim_set_hl(0, "@text.literal", { fg = color.base04, bg = color.none })
vim.api.nvim_set_hl(0, "@text.uri", { fg = color.base14, bg = color.none, underline = true })
vim.api.nvim_set_hl(0, "@tag", { fg = color.base09, bg = color.none })
vim.api.nvim_set_hl(0, "@tag.attribute", { fg = color.base15, bg = color.none })
vim.api.nvim_set_hl(0, "@tag.delimiter", { fg = color.base15, bg = color.none })
vim.api.nvim_set_hl(0, "@reference", { fg = color.base04, bg = color.none })
vim.api.nvim_set_hl(0, "NvimInternalError", { fg = color.base00, bg = color.base08 })
vim.api.nvim_set_hl(0, "TermCursor", { fg = color.base00, bg = color.base04 })
vim.api.nvim_set_hl(0, "TermCursorNC", { fg = color.base00, bg = color.base04 })
vim.api.nvim_set_hl(0, "StatusReplace", { fg = color.base00, bg = color.base08 })
vim.api.nvim_set_hl(0, "StatusInsert", { fg = color.base00, bg = color.base12 })
vim.api.nvim_set_hl(0, "StatusVisual", { fg = color.base00, bg = color.base14 })
vim.api.nvim_set_hl(0, "StatusTerminal", { fg = color.base00, bg = color.base11 })
vim.api.nvim_set_hl(0, "StatusNormal", { fg = color.base00, bg = color.base15 })
vim.api.nvim_set_hl(0, "StatusCommand", { fg = color.base00, bg = color.base13 })
vim.api.nvim_set_hl(0, "StatusLineDiagnosticWarn", { fg = color.base14, bg = color.base00, bold = true })
vim.api.nvim_set_hl(0, "StatusLineDiagnosticError", { fg = color.base10, bg = color.base00, bold = true })
vim.api.nvim_set_hl(0, "NotifyERRORBorder", { fg = color.base08, bg = color.none })
vim.api.nvim_set_hl(0, "NotifyWARNBorder", { fg = color.base14, bg = color.none })
vim.api.nvim_set_hl(0, "NotifyINFOBorder", { fg = color.base05, bg = color.none })
vim.api.nvim_set_hl(0, "NotifyDEBUGBorder", { fg = color.base13, bg = color.none })
vim.api.nvim_set_hl(0, "NotifyTRACEBorder", { fg = color.base13, bg = color.none })
vim.api.nvim_set_hl(0, "NotifyERRORIcon", { fg = color.base08, bg = color.none })
vim.api.nvim_set_hl(0, "NotifyWARNIcon", { fg = color.base14, bg = color.none })
vim.api.nvim_set_hl(0, "NotifyINFOIcon", { fg = color.base05, bg = color.none })
vim.api.nvim_set_hl(0, "NotifyDEBUGIcon", { fg = color.base13, bg = color.none })
vim.api.nvim_set_hl(0, "NotifyTRACEIcon", { fg = color.base13, bg = color.none })
vim.api.nvim_set_hl(0, "NotifyERRORTitle", { fg = color.base08, bg = color.none })
vim.api.nvim_set_hl(0, "NotifyWARNTitle", { fg = color.base14, bg = color.none })
vim.api.nvim_set_hl(0, "NotifyINFOTitle", { fg = color.base05, bg = color.none })
vim.api.nvim_set_hl(0, "NotifyDEBUGTitle", { fg = color.base13, bg = color.none })
vim.api.nvim_set_hl(0, "NotifyTRACETitle", { fg = color.base13, bg = color.none })
-- CMP
vim.api.nvim_set_hl(0, "CmpItemAbbr", { fg = "#adadad", bg = color.none })
vim.api.nvim_set_hl(0, "CmpItemAbbrMatch", { fg = color.base05, bg = color.none, bold = true })
vim.api.nvim_set_hl(0, "CmpItemAbbrMatchFuzzy", { fg = color.base04, bg = color.none, bold = true })
vim.api.nvim_set_hl(0, "CmpItemMenu", { fg = color.base04, bg = color.none, italic = true })
vim.api.nvim_set_hl(0, "CmpItemKindInterface", { fg = color.base01, bg = color.base08 })
vim.api.nvim_set_hl(0, "CmpItemKindColor", { fg = color.base01, bg = color.base08 })
vim.api.nvim_set_hl(0, "CmpItemKindTypeParameter", { fg = color.base01, bg = color.base08 })
vim.api.nvim_set_hl(0, "CmpItemKindText", { bg = "NONE" })
vim.api.nvim_set_hl(0, "CmpItemKindEnum", { bg = "NONE" })
vim.api.nvim_set_hl(0, "CmpItemKindKeyword", { bg = "NONE" })
vim.api.nvim_set_hl(0, "CmpItemKindConstant", { bg = "NONE" })
vim.api.nvim_set_hl(0, "CmpItemKindConstructor", { bg = "NONE" })
vim.api.nvim_set_hl(0, "CmpItemKindReference", { bg = "NONE" })
vim.api.nvim_set_hl(0, "CmpItemKindFunction", { bg = "NONE" })
vim.api.nvim_set_hl(0, "CmpItemKindStruct", { bg = "NONE" })
vim.api.nvim_set_hl(0, "CmpItemKindClass", { bg = "NONE" })
vim.api.nvim_set_hl(0, "CmpItemKindModule", { bg = "NONE" })
vim.api.nvim_set_hl(0, "CmpItemKindOperator", { bg = "NONE" })
vim.api.nvim_set_hl(0, "CmpItemKindField", { bg = "NONE" })
vim.api.nvim_set_hl(0, "CmpItemKindProperty", { bg = "NONE" })
vim.api.nvim_set_hl(0, "CmpItemKindEvent", { bg = "NONE" })
vim.api.nvim_set_hl(0, "CmpItemKindUnit", { bg = "NONE" })
vim.api.nvim_set_hl(0, "CmpItemKindSnippet", { bg = "NONE" })
vim.api.nvim_set_hl(0, "CmpItemKindFolder", { bg = "NONE" })
vim.api.nvim_set_hl(0, "CmpItemKindVariable", { bg = "NONE" })
vim.api.nvim_set_hl(0, "CmpItemKindFile", { bg = "NONE" })
vim.api.nvim_set_hl(0, "CmpItemKindMethod", { bg = "NONE" })
vim.api.nvim_set_hl(0, "CmpItemKindValue", { bg = "NONE" })
vim.api.nvim_set_hl(0, "CmpItemKindEnumMember", { bg = "NONE" })
-- Telescope
vim.api.nvim_set_hl(0, "TelescopeBorder", { link = "FloatBorder" })
vim.api.nvim_set_hl(0, "TelescopePromptTitle", { fg = color.base02, bg = color.base11 })
vim.api.nvim_set_hl(0, "TelescopePromptBorder", { fg = color.base04 })
vim.api.nvim_set_hl(0, "TelescopePromptNormal", { fg = color.base04 })
vim.api.nvim_set_hl(0, "TelescopePromptPrefix", { fg = color.base08 })
vim.api.nvim_set_hl(0, "TelescopePreviewTitle", { fg = color.base02, bg = color.base12 })
vim.api.nvim_set_hl(0, "TelescopeResultsTitle", { fg = color.base02, bg = color.none })
vim.api.nvim_set_hl(0, "TelescopeNormal", { fg = color.none, bg = color.none })
vim.api.nvim_set_hl(0, "TelescopeSelection", { fg = color.none, bg = color.base02 })
vim.api.nvim_set_hl(0, "TelescopePreviewLine", { fg = color.none, bg = color.base01 })
vim.api.nvim_set_hl(0, "TelescopeMatching", { fg = color.base12, bg = color.none, bold = true, italic = true })
--
vim.api.nvim_set_hl(0, "HydraRed", { fg = color.base12, bg = color.none })
vim.api.nvim_set_hl(0, "HydraBlue", { fg = color.base09, bg = color.none })
vim.api.nvim_set_hl(0, "HydraAmaranth", { fg = color.base10, bg = color.none })
vim.api.nvim_set_hl(0, "HydraTeal", { fg = color.base08, bg = color.none })
vim.api.nvim_set_hl(0, "alpha3", { fg = color.base03, bg = color.none })
vim.api.nvim_set_hl(0, "HydraHint", { fg = color.none, bg = color.blend })
vim.api.nvim_set_hl(0, "alpha1", { fg = color.base03, bg = color.none })
vim.api.nvim_set_hl(0, "alpha2", { fg = color.base04, bg = color.none })
vim.api.nvim_set_hl(0, "CodeBlock", { fg = color.none, bg = color.base01 })
vim.api.nvim_set_hl(0, "BufferLineDiagnostic", { fg = color.base10, bg = color.none, bold = true })
vim.api.nvim_set_hl(0, "BufferLineDiagnosticVisible", { fg = color.base10, bg = color.none, bold = true })
vim.api.nvim_set_hl(0, "htmlH1", { link = "markdownH1" })
vim.api.nvim_set_hl(0, "mkdRule", { link = "markdownRule" })
vim.api.nvim_set_hl(0, "mkdListItem", { link = "markdownListMarker" })
vim.api.nvim_set_hl(0, "mkdListItemCheckbox", { link = "markdownListMarker" })
vim.api.nvim_set_hl(0, "VimwikiHeader1", { link = "markdownH1" })
vim.api.nvim_set_hl(0, "VimwikiHeader2", { link = "markdownH1" })
vim.api.nvim_set_hl(0, "VimwikiHeader3", { link = "markdownH1" })
vim.api.nvim_set_hl(0, "VimwikiHeader4", { link = "markdownH1" })
vim.api.nvim_set_hl(0, "VimwikiHeader5", { link = "markdownH1" })
vim.api.nvim_set_hl(0, "VimwikiHeader6", { link = "markdownH1" })
vim.api.nvim_set_hl(0, "VimwikiHeaderChar", { link = "markdownH1" })
vim.api.nvim_set_hl(0, "VimwikiList", { link = "markdownListMarker" })
vim.api.nvim_set_hl(0, "VimwikiLink", { link = "markdownUrl" })
vim.api.nvim_set_hl(0, "VimwikiCode", { link = "markdownCode" })
vim.api.nvim_set_hl(0, "HighlightURL", { underline = true })

vim.g.terminal_color_0 = color.base00
vim.g.terminal_color_1 = color.base11
vim.g.terminal_color_2 = color.base14
vim.g.terminal_color_3 = color.base13
vim.g.terminal_color_4 = color.base09
vim.g.terminal_color_5 = color.base15
vim.g.terminal_color_6 = color.base08
vim.g.terminal_color_7 = color.base05
vim.g.terminal_color_8 = color.base03
vim.g.terminal_color_9 = color.base11
vim.g.terminal_color_10 = color.base14
vim.g.terminal_color_11 = color.base13
vim.g.terminal_color_12 = color.base09
vim.g.terminal_color_13 = color.base15
vim.g.terminal_color_14 = color.base07
vim.g.terminal_color_15 = color.base06

require("oxocarbon.features")

return { oxocarbon = color }
